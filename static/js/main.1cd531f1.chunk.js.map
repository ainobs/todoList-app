{"version":3,"sources":["component/header.js","component/List.js","App.js","index.js"],"names":["Header","submit","todo","setTodo","className","onSubmit","type","placeholder","value","onChange","e","target","List","items","deleteItem","editTodo","handleCheck","map","item","id","text","onClick","App","useState","todoList","setTodoList","preventDefault","newItem","Date","now","completed","filter","edit","find","checkList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAmBeA,EAlBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACI,sBAAKC,UAAU,SAAf,UACI,mBAAGA,UAAU,cAAb,kBACA,uBAAMC,SAAUJ,EAAQG,UAAU,OAAlC,UACI,uBACIE,KAAK,OACLF,UAAU,YACVG,YAAY,uBACZC,MAAQN,EACRO,SAAW,SAACC,GAAMP,EAAQO,EAAEC,OAAOH,UAEvC,wBAAQF,KAAK,SAASF,UAAU,WAAhC,sBCSDQ,G,MApBF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAIxC,OACI,qBAAKZ,UAAU,YAAf,SACMS,EAAMI,KAAI,SAACC,GACb,OAAO,sBAAmBd,UAAU,YAA7B,UACC,uBAAOA,UAAU,iBAAiBE,KAAK,WAAWG,SAAU,WAAOO,EAAYE,EAAKC,OACpF,sBAAMf,UAAU,aAAhB,SAA8Bc,EAAKE,OACnC,wBAAQhB,UAAU,WAAWiB,QAAS,kBAAMN,EAASG,EAAKC,KAA1D,gBACA,wBAAQf,UAAU,aAAaiB,QAAS,kBAAMP,EAAWI,EAAKC,KAA9D,iBAJSD,EAAKC,WCiDnBG,EArDL,WAAM,IAAD,EACWC,mBAAS,IADpB,mBACNrB,EADM,KACAC,EADA,OAEmBoB,mBAAS,IAF5B,mBAENC,EAFM,KAEIC,EAFJ,KA6Cb,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,KAAMA,EAAMC,QAASA,EAASF,OA3CvB,SAACS,GAClBA,EAAEgB,iBAEF,IAAMC,EAAU,CACdR,GAAIS,KAAKC,MACTT,KAAMlB,EACN4B,WAAW,GAID,KAAT5B,IACDuB,EAAY,GAAD,mBAAKD,GAAL,CAAeG,KAC1BxB,EAAQ,QAgCR,cAAC,EAAD,CAAMU,MAAOW,EAAUV,WA3BR,SAACK,GAClB,IAAIL,EAAaU,EAASO,QAAO,SAACrB,GAAD,OAAMA,EAAES,KAAOA,KAChDM,EAAYX,IAyBuCC,SArBpC,SAACI,GAChB,IAAIL,EAAaU,EAASO,QAAO,SAACrB,GAAD,OAAMA,EAAES,KAAOA,KAC5Ca,EAAOR,EAASS,MAAK,SAACvB,GAAD,OAAOA,EAAES,KAAOA,KACzChB,EAAQ6B,EAAKZ,MACbK,EAAYX,IAiB6DE,YAbtD,SAACG,GAClB,IAAIe,EAAYV,EAASP,KAAI,SAACC,GAI5B,OAHGA,EAAKC,KAAOA,IACbD,EAAKY,WAAaZ,EAAKY,WAElBZ,KAETO,EAAYS,U,MC1ClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1cd531f1.chunk.js","sourcesContent":["import './Header.css'\r\nconst Header = ({ submit, todo, setTodo }) => {\r\n    return ( \r\n        <div className=\"header\">\r\n            <p className=\"header-text\">TODO</p>\r\n            <form onSubmit={submit} className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"todo-form\" \r\n                    placeholder=\"Create a new todo...\"\r\n                    value= {todo}\r\n                    onChange= {(e)=> {setTodo(e.target.value)}}\r\n                />\r\n                <button type=\"submit\" className=\"todo-btn\">+</button>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import './List.css';\r\n\r\nconst List = ({items, deleteItem, editTodo, handleCheck}) => {\r\n\r\n  \r\n   \r\n    return ( \r\n        <div className=\"container\">\r\n             {items.map((item) => {\r\n            return <div key={item.id} className=\"todo-list\">\r\n                    <input className=\"input-checkbox\" type=\"checkbox\" onChange={() => {handleCheck(item.id)} }/>\r\n                    <span className=\"input-text\">{item.text}</span>\r\n                    <button className=\"edit-btn\" onClick={() => editTodo(item.id)}>gg</button>\r\n                    <button className=\"delete-btn\" onClick={() => deleteItem(item.id)}>x</button>\r\n                </div>\r\n            \r\n            })}\r\n        </div>\r\n       \r\n    )\r\n}\r\n \r\nexport default List;","import { useState } from 'react';\nimport './App.css';\nimport Header from './component/header';\nimport List from './component/List';\n\nlet App = ()=> {\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  let handleSubmit = (e)=> {\n    e.preventDefault();\n\n    const newItem = {\n      id: Date.now(),\n      text: todo,\n      completed: false\n    }\n\n    // TO ALLOW ONLY TEXTS TO BE INSERTED INTO THE TODO LIST\n    if(todo !== '') {\n      setTodoList([...todoList, newItem]);\n      setTodo('');\n    }\n  }\n\n  //DELETE ITEM FUNCTION\n  let handleDelete = (id) => {\n    let deleteItem = todoList.filter((e)=> e.id !== id);\n    setTodoList(deleteItem);\n  }\n\n  //HANDLE EDIT FUNCTION\n  let handleEdit = (id) => {\n    let deleteItem = todoList.filter((e)=> e.id !== id);\n    let edit = todoList.find((e) => e.id === id)\n    setTodo(edit.text);\n    setTodoList(deleteItem);\n  }\n\n  //HANDLE CHECKBOX FUNCTION\n  let handleCheckBox = (id) => {\n      let checkList = todoList.map((item) => {\n        if(item.id === id) {\n          item.completed = !item.completed;\n        }\n        return item;\n      })\n      setTodoList(checkList);\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header todo={todo} setTodo={setTodo} submit={handleSubmit} />\n      <List items={todoList} deleteItem={handleDelete} editTodo={handleEdit} handleCheck={handleCheckBox}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);;\n"],"sourceRoot":""}