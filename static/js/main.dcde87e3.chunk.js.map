{"version":3,"sources":["components/header.js","components/List.js","components/Footer.js","App.js","index.js"],"names":["Header","submit","todo","setTodo","className","onSubmit","type","placeholder","value","onChange","e","target","onClick","List","items","deleteItem","editTodo","handleCheck","duration","easing","map","item","checked","completed","id","text","Footer","total","length","filter","App","useState","todoList","setTodoList","useEffect","temp","localStorage","getItem","loadedList","JSON","parse","store","stringify","setItem","preventDefault","newItem","Date","now","edit","find","checkList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAqBeA,EAlBA,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC5B,OACI,sBAAKC,UAAU,SAAf,UACI,mBAAGA,UAAU,cAAb,kBACA,uBAAMC,SAAUJ,EAAQG,UAAU,OAAlC,UACI,uBACIE,KAAK,OACLF,UAAU,YACVG,YAAY,uBACZC,MAAQN,EACRO,SAAW,SAACC,GAAMP,EAAQO,EAAEC,OAAOH,UAEvC,cAAC,IAAD,CAAOI,QAASX,EAAQG,UAAU,oB,uBCUnCS,EArBF,SAAC,GAAgD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,YAExC,OACI,sBAAKb,UAAU,YAAf,UACI,mBAAGA,UAAU,YAAb,wCACA,cAAC,IAAD,CAAUc,SAAU,IAAKC,OAAO,cAAhC,SACKL,EAAMM,KAAI,SAACC,GACR,OAAO,sBAAmBjB,UAAU,YAA7B,UACH,uBAAOE,KAAK,WAAWgB,QAASD,EAAKE,UAAWnB,UAAU,iBAAiBK,SAAU,WAAOQ,EAAYI,EAAKG,OAC7G,sBAAMpB,UAAWiB,EAAKE,UAAY,SAAW,aAA7C,SAA4DF,EAAKI,OACjE,cAAC,IAAD,CAAWrB,UAAU,WAAWQ,QAAS,kBAAMI,EAASK,EAAKG,OAC7D,cAAC,IAAD,CAASpB,UAAU,aAAaQ,QAAS,kBAAMG,EAAWM,EAAKG,SAJlDH,EAAKG,aCU3BE,G,MAnBA,SAAC,GAAa,IAAZZ,EAAW,EAAXA,MACTa,EAAQb,EAAMc,OASlB,OACI,sBAAKxB,UAAU,SAAf,UACI,uBAAMA,UAAU,cAAhB,wBAA0CuB,KAAa,uBACvD,uBAAMvB,UAAU,aAAhB,UAVGU,EAAMe,QAAO,SAACnB,GAAD,OAAuB,IAAhBA,EAAEa,aAUiBK,OAA1C,aAA+D,uBAC/D,uBAAMxB,UAAU,kBAAhB,UAPKU,EAAMe,QAAO,SAACnB,GAAD,OAAuB,IAAhBA,EAAEa,aAOyBK,OAApD,qBC8DGE,EAzEL,WAAK,MAGWC,mBAAS,IAHpB,mBAGN7B,EAHM,KAGAC,EAHA,OAImB4B,mBAAS,IAJ5B,mBAINC,EAJM,KAIIC,EAJJ,KAObC,qBAAU,WACR,IAAMC,EAAOC,aAAaC,QAAQ,QAC5BC,EAAaC,KAAKC,MAAML,GAC3BG,GACDL,EAAYK,KAEb,IAGHJ,qBAAU,WACR,IAAMO,EAAQF,KAAKG,UAAUV,GAC7BI,aAAaO,QAAQ,OAAQF,KAC5B,CAACT,IA6CJ,OACE,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQF,KAAMA,EAAMC,QAASA,EAASF,OA5CrB,SAACS,GACpBA,EAAEkC,iBAEF,IAAMC,EAAU,CACdrB,GAAIsB,KAAKC,MACTtB,KAAMvB,EACNqB,WAAW,GAID,KAATrB,IACD+B,EAAY,GAAD,mBAAKD,GAAL,CAAea,KAC1B1C,EAAQ,QAiCR,cAAC,EAAD,CAAMW,MAAOkB,EAAUjB,WA5BN,SAACS,GACpB,IAAIT,EAAaiB,EAASH,QAAO,SAACnB,GAAD,OAAMA,EAAEc,KAAOA,KAChDS,EAAYlB,IA0BuCC,SArBpC,SAACQ,GAChB,IAAIT,EAAaiB,EAASH,QAAO,SAACnB,GAAD,OAAMA,EAAEc,KAAOA,KAC5CwB,EAAOhB,EAASiB,MAAK,SAACvC,GAAD,OAAOA,EAAEc,KAAOA,KACzCrB,EAAQ6C,EAAKvB,MACbQ,EAAYlB,IAiB6DE,YAbtD,SAACO,GAClB,IAAI0B,EAAYlB,EAASZ,KAAI,SAACC,GAI5B,OAHGA,EAAKG,KAAOA,IACbH,EAAKE,WAAaF,EAAKE,WAElBF,KAETY,EAAYiB,MAOZ,cAAC,EAAD,CAAQpC,MAAOkB,Q,MCpErBmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.dcde87e3.chunk.js","sourcesContent":["import './Header.css'\r\nimport { IoAdd } from 'react-icons/io5';\r\n\r\nconst Header = ({ submit, todo, setTodo }) => {\r\n    return ( \r\n        <div className=\"header\">\r\n            <p className=\"header-text\">TODO</p>\r\n            <form onSubmit={submit} className=\"form\">\r\n                <input \r\n                    type=\"text\"\r\n                    className=\"todo-form\" \r\n                    placeholder=\"Create a new todo...\"\r\n                    value= {todo}\r\n                    onChange= {(e)=> {setTodo(e.target.value)}}\r\n                />\r\n                <IoAdd onClick={submit} className=\"todo-btn\" />\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Header;","import './List.css';\r\nimport { FaTrash, FaRegEdit } from 'react-icons/fa';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nconst List = ({items, deleteItem, editTodo, handleCheck}) => {\r\n \r\n    return ( \r\n        <div className=\"container\">\r\n            <p className=\"list-text\">What Are You Doing Today ?</p>\r\n            <FlipMove duration={300} easing='ease-in-out'>\r\n                {items.map((item) => {\r\n                    return <div key={item.id} className=\"todo-list\">\r\n                        <input type=\"checkbox\" checked={item.completed} className=\"input-checkbox\" onChange={() => {handleCheck(item.id)} } />\r\n                        <span className={item.completed ? 'active' : 'input-text'}>{item.text}</span>\r\n                        <FaRegEdit className=\"edit-btn\" onClick={() => editTodo(item.id)} />\r\n                        <FaTrash className=\"delete-btn\" onClick={() => deleteItem(item.id)} />\r\n                    </div>\r\n                \r\n                })}\r\n            </FlipMove>\r\n            \r\n        </div>\r\n    )\r\n}\r\n \r\nexport default List;","import './Footer.css';\r\n\r\nconst Footer = ({items}) => {\r\n    let total = items.length;\r\n    let leftItems = () => {\r\n        return items.filter((e) => e.completed === false);\r\n      }\r\n\r\n      let completedItems = () => {\r\n          return items.filter((e) => e.completed === true);\r\n      }\r\n   \r\n    return (\r\n        <div className=\"footer\">\r\n            <span className=\"total-items\">All Items: {total}</span><br />\r\n            <span className=\"items-left\">{leftItems().length} Active</span><br />\r\n            <span className=\"items-completed\">{completedItems().length} Completed</span>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import { useState, useEffect } from 'react';\nimport Header from './components/header';\nimport List from './components/List';\nimport Footer from './components/Footer';\n\nlet App = ()=> {\n\n  // SETTING STATES TO KEEP TRACK OF USER INPUTS AND UPDATE LIST\n  const [todo, setTodo] = useState('');\n  const [todoList, setTodoList] = useState([]);\n\n  //RETRIEVING USER DATA STORED IN THE LOCAL STORAGE\n  useEffect(() => {\n    const temp = localStorage.getItem(\"list\");\n    const loadedList = JSON.parse(temp);\n    if(loadedList) {\n      setTodoList(loadedList);\n    }\n  }, []);\n\n  //SAVING USER DATA IN THE LOCAL STORAGE WHICH IS SAVED WHENEVER THERE IS A CHANGE IN THE LIST ITEMS\n  useEffect(() => {\n    const store = JSON.stringify(todoList);\n    localStorage.setItem(\"list\", store);\n  }, [todoList]);\n\n  //FUNCTION TO HANDLE FORM SUBMISSION\n  const handleSubmit = (e)=> {\n    e.preventDefault();\n\n    const newItem = {\n      id: Date.now(),\n      text: todo,\n      completed: false\n    }\n\n    // TO PREVENT EMPTY SPACES TO BE INSERTED INTO THE TODO LIST\n    if(todo !== '') {\n      setTodoList([...todoList, newItem]);\n      setTodo('');\n    }\n  }\n\n  //DELETE ITEM FUNCTION\n  const handleDelete = (id) => {\n    let deleteItem = todoList.filter((e)=> e.id !== id);\n    setTodoList(deleteItem);\n  }\n\n  //HANDLE EDIT FUNCTION WHICH REMOVES THE ITEM FROM THE LIST AND \n  //RETURNS IT BACK TO THE INPUT FORM WHERE CORRECTIONS CAN BE MADE\n  let handleEdit = (id) => {\n    let deleteItem = todoList.filter((e)=> e.id !== id);\n    let edit = todoList.find((e) => e.id === id)\n    setTodo(edit.text);\n    setTodoList(deleteItem);\n  }\n\n  //HANDLE CHECKBOX FUNCTION\n  let handleCheckBox = (id) => {\n      let checkList = todoList.map((item) => {\n        if(item.id === id) {\n          item.completed = !item.completed;\n        }\n        return item;\n      })\n      setTodoList(checkList)\n  }\n  \n  return (\n    <div className=\"App\">\n      <Header todo={todo} setTodo={setTodo} submit={handleSubmit} />\n      <List items={todoList} deleteItem={handleDelete} editTodo={handleEdit} handleCheck={handleCheckBox}/>\n      <Footer items={todoList} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);;\n"],"sourceRoot":""}